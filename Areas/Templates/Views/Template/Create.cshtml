@model ExamForms.ViewModel.TemplateViewModel

<ul class="nav nav-tabs nav-fill" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link active" id="template-setup-tab" data-bs-toggle="tab" href="#template-setup" role="tab" aria-controls="template-setup" aria-selected="true">Template Setup</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" id="template-question-tab" data-bs-toggle="tab" href="#template-question" role="tab" aria-controls="template-question" aria-selected="false">Template Question</a>
    </li>
</ul>

<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="template-setup" role="tabpanel" aria-labelledby="template-setup-tab">
        <div class="pt-3 pb-3">
            <form>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="mb-3">
                    <label class="form-label" for="templateTitle">@Html.DisplayNameFor(x => x.Title)</label>
                    @Html.EditorFor(x => x.Title, new { htmlAttributes = new { placeholder = "Template title", id = "templateTitle", @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    <label class="form-label" for="templateDescription">@Html.DisplayNameFor(x => x.Description)</label>
                    @Html.TextAreaFor(x => x.Description, new { placeholder = "Describe the template", id = "templateDescription", @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    <label class="form-label" for="templateTopic">@Html.DisplayNameFor(x => x.Topic)</label>
                    @Html.EditorFor(x => x.Topic, new { htmlAttributes = new { placeholder = "Template topic", id = "templateTopic", @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Topic, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    <label class="form-label" for="templateTopic">@Html.DisplayNameFor(x => x.Tags)</label>
                    <input name='Tags' class="form-control" placeholder="Add tags ans Hit 'Enter'" value=''>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="templateTopic">@Html.DisplayNameFor(x => x.ImageUrl)</label>
                    @Html.EditorFor(x => x.ImageUrl, new { htmlAttributes = new { id = "editImageUrl", type = "hidden" } })
                    @Html.EditorFor(x => x.ImageUrl, new { htmlAttributes = new { id = "imageUrl", @class="form-control", accept="image/jpeg, image/png", name="Image", type="file" } })
                </div>
                <button type="submit" class="btn btn-primary">Next</button>
            </form>
        </div>
    </div>

    <div class="tab-pane fade" id="template-question" role="tabpanel" aria-labelledby="template-question-tab">
        <div class="pt-3 pb-3">
            <button id="addQuestionBtn" onclick="addQuestion()" class="btn btn-outline-success">
                Add New Question
            </button>
        </div>
    </div>
</div>

<div id="addQuestion_modal_placeholder"></div>

@section Scripts {
    <script>
        var input = document.querySelector('input[name=Tags]');
        new Tagify(input)
    </script>
}